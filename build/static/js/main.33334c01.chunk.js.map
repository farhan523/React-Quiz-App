{"version":3,"sources":["store/actionType/actionType.js","store/actions/fetchData.js","components/QuestionCard.jsx","image/sports.jpg","image/film.jpg","image/comp.png","components/SelectCategory.jsx","components/Home.jsx","App.js","store/reducer/Reducer.js","logs/store.js","index.js"],"names":["UPLOAD_DATA","SELECT_CATEGORY","fetchData","dispatch","state","a","console","log","categorie","fetch","res","json","data","results","map","item","correct_answer","answers","type","payLoad","error","QuestionCard","useDispatch","useSelector","questions","useEffect","useState","count","setCount","color","setColor","setColor2","setColor3","next","setNext","able","setAble","display","setDisply","score","setScore","scoreBoard","setScoreBoard","ctaButton","e","target","disabled","innerHTML","prev","className","to","style","padding","textDecoration","backgroundColor","loading","alignSelf","height","width","timeout","question","incorrect_answers","index","onClick","ctaCat","attributes","value","SelectCategory","justifyContent","flexWrap","src","sport","comp","paddingTop","film","Home","exact","path","App","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33334c01.chunk.js","sourcesContent":["export const UPLOAD_DATA = 'UPLOAD_DATA'\r\nexport const SELECT_CATEGORY = 'SELECT_CATEGORY'","\r\nimport { UPLOAD_DATA } from \"../actionType/actionType\"\r\n\r\n\r\nexport const fetchData = async (dispatch, state) => {\r\n\r\n    try {\r\n        console.log(state.categorie)\r\n        let res = await fetch(`https://opentdb.com/api.php?amount=10&category=${state.categorie}&difficulty=medium&type=multiple`)\r\n        let data = await res.json();\r\n        let answers = await data.results.map((item) => { return item.correct_answer })\r\n        console.log(answers);\r\n        dispatch({\r\n            type: UPLOAD_DATA,\r\n            payLoad: data.results,\r\n            answers\r\n        })\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { fetchData } from '../store/actions/fetchData'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction QuestionCard() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const state = useSelector((state) => { return state })\r\n    if (state[1]) {\r\n        console.log(state.questions)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData(dispatch, state)\r\n\r\n\r\n    }, [])\r\n\r\n    let [count, setCount] = useState(0)\r\n    let [color, setColor] = useState('rgb(216, 216, 131)')\r\n    let [color2, setColor2] = useState('rgb(216, 216, 131)')\r\n    let [color3, setColor3] = useState('rgb(216, 216, 131)')\r\n    let [next, setNext] = useState(false)\r\n    let [able, setAble] = useState(false)\r\n    let [display, setDisply] = useState('none')\r\n    let [score, setScore] = useState(0)\r\n    let [scoreBoard, setScoreBoard] = useState(false)\r\n\r\n    function ctaButton(e) {\r\n        setColor('rgb(216, 216, 131)')\r\n        setColor2('rgb(216, 216, 131)')\r\n        setColor3('rgb(216, 216, 131)')\r\n        setNext(true)\r\n        setDisply('block')\r\n        setAble(true)\r\n        e.target.disabled = false\r\n\r\n        if (e.target.innerHTML == state.answers[count]) {\r\n            setScore((prev) => prev + 1)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function ctaNext() {\r\n        setNext(false)\r\n        setCount((prev) => prev + 1)\r\n        setAble(false)\r\n    }\r\n\r\n\r\n    function ctaSubmit() {\r\n\r\n        setScoreBoard(true)\r\n    }\r\n\r\n    if (scoreBoard) {\r\n        return <div className=\"card\">\r\n            <h1>Your Score is {score} Out Of 10</h1>\r\n            <Link to=\"/\" style={{ padding: '10px 20px', textDecoration: 'none', backgroundColor: 'black', color: 'white' }}>Home</Link>\r\n        </div>\r\n    } else {\r\n        return (\r\n            <div className=\"card\">\r\n\r\n                {state.loading ? <Loader\r\n                    style={{ alignSelf: 'MutatingDots' }}\r\n                    type=\"Oval\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                /> : <h2>{state.questions[count].question} {count + 1} /10</h2>}\r\n                {state.loading ? null : state.questions[count].incorrect_answers.map((item, index) => { return <button disabled={able} key={index} onClick={ctaButton} style={{ backgroundColor: { color } }} >{item}</button> })}\r\n                {state.loading ? null : <button disabled={able} onClick={ctaButton}>{state.questions[count].correct_answer}</button>}\r\n                {next && count < 9 ? <button onClick={ctaNext} style={{ backgroundColor: 'black', color: 'white', display: { display } }}>NEXT</button> : null}\r\n                {count === 9 ? <button style={{ backgroundColor: 'black', color: 'white' }} onClick={ctaSubmit}>Submit</button> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default QuestionCard\r\n","export default __webpack_public_path__ + \"static/media/sports.64b6c45b.jpg\";","export default __webpack_public_path__ + \"static/media/film.a7e2ce82.jpg\";","export default __webpack_public_path__ + \"static/media/comp.6f8abee3.png\";","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { SELECT_CATEGORY } from '../store/actionType/actionType';\r\nimport sport from '../image/sports.jpg'\r\nimport film from '../image/film.jpg'\r\nimport comp from '../image/comp.png'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nasync function ctaCat(e, dispatch) {\r\n    console.log(e.target.attributes.value.value);\r\n    await dispatch({\r\n        type: SELECT_CATEGORY,\r\n        categorie: e.target.attributes.value.value\r\n    })\r\n}\r\n\r\n\r\nfunction SelectCategory() {\r\n\r\n    let dispatch = useDispatch();\r\n\r\n\r\n    return (\r\n        <div className=\"select\">\r\n            <h1>Welcome to Quiz</h1>\r\n            <h3>Choose one from the categories below and see how many questions you can answer correctly out of 10 questions!</h3>\r\n            <div style={{ display: 'flex', width: '80%', justifyContent: 'space-around', flexWrap: 'wrap' }}>\r\n                <Link to=\"/quiz\"  ><img className=\"imb\" src={sport} value={'10'} onClick={(e) => ctaCat(e, dispatch)} style={{ width: '200px' }} /></Link>\r\n                <Link to=\"/quiz\" ><img className=\"imb\" value={'18'} onClick={(e) => ctaCat(e, dispatch)} src={comp} style={{ width: '170px', paddingTop: 20 }} /></Link>\r\n                <Link to=\"/quiz\" ><img className=\"imb\" value={'11'} onClick={(e) => ctaCat(e, dispatch)} src={film} style={{ width: '200px' }} /></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectCategory\r\n","import React from 'react'\r\nimport QuestionCard from './QuestionCard';\r\nimport SelectCategory from './SelectCategory'\r\nimport './style.css'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <Router>\r\n            <div className=\"home\">\r\n\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <SelectCategory />\r\n                    </Route>\r\n                    <Route path=\"/quiz\">\r\n                        <QuestionCard />\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import Home from './components/Home'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { UPLOAD_DATA, SELECT_CATEGORY } from \"../actionType/actionType\"\r\n\r\nlet initialState = {\r\n    loading: true,\r\n    questions: [],\r\n    answers: [],\r\n    categorie: ''\r\n}\r\n\r\n\r\nexport const questionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case UPLOAD_DATA:\r\n            // console.log(action.payLoad)\r\n            return {\r\n                ...state,\r\n                questions: action.payLoad,\r\n                answers: action.answers,\r\n                loading: false,\r\n            }\r\n        case SELECT_CATEGORY:\r\n            return {\r\n                loading: true,\r\n                questions: [],\r\n                answers: [],\r\n                categorie: action.categorie,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { questionReducer } from '../store/reducer/Reducer'\r\n\r\nconst store = createStore(questionReducer, applyMiddleware(thunk));\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from '../src/logs/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}