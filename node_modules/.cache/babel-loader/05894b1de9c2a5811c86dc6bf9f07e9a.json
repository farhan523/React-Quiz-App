{"ast":null,"code":"import _slicedToArray from\"D:/React Apps/quiz-app-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{fetchData}from'../store/actions/fetchData';import{useDispatch,useSelector}from'react-redux';import{Link}from'react-router-dom';import\"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";import Loader from\"react-loader-spinner\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function QuestionCard(){var dispatch=useDispatch();var state=useSelector(function(state){return state;});if(state[1]){console.log(state.questions);}useEffect(function(){fetchData(dispatch,state);},[]);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState('rgb(216, 216, 131)'),_useState4=_slicedToArray(_useState3,2),color=_useState4[0],setColor=_useState4[1];var _useState5=useState('rgb(216, 216, 131)'),_useState6=_slicedToArray(_useState5,2),color2=_useState6[0],setColor2=_useState6[1];var _useState7=useState('rgb(216, 216, 131)'),_useState8=_slicedToArray(_useState7,2),color3=_useState8[0],setColor3=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),next=_useState10[0],setNext=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),able=_useState12[0],setAble=_useState12[1];var _useState13=useState('none'),_useState14=_slicedToArray(_useState13,2),display=_useState14[0],setDisply=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),score=_useState16[0],setScore=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),scoreBoard=_useState18[0],setScoreBoard=_useState18[1];function ctaButton(e){setColor('rgb(216, 216, 131)');setColor2('rgb(216, 216, 131)');setColor3('rgb(216, 216, 131)');setNext(true);setDisply('block');setAble(true);e.target.disabled=false;if(e.target.innerHTML==state.answers[count]){setScore(function(prev){return prev+1;});}}function ctaNext(){setNext(false);setCount(function(prev){return prev+1;});setAble(false);}function ctaSubmit(){setScoreBoard(true);}if(scoreBoard){return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Your Score is \",score,\" Out Of 10\"]}),/*#__PURE__*/_jsx(Link,{to:\"/\",style:{padding:'10px 20px',textDecoration:'none',backgroundColor:'black',color:'white'},children:\"Home\"})]});}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[state.loading?/*#__PURE__*/_jsx(Loader,{style:{alignSelf:'MutatingDots'},type:\"Oval\",color:\"#00BFFF\",height:100,width:100,timeout:3000//3 secs\n}):/*#__PURE__*/_jsxs(\"h2\",{children:[state.questions[count].question,\" \",count+1,\" /10\"]}),state.loading?null:state.questions[count].incorrect_answers.map(function(item,index){return/*#__PURE__*/_jsx(\"button\",{disabled:able,onClick:ctaButton,style:{backgroundColor:{color:color}},children:item},index);}),state.loading?null:/*#__PURE__*/_jsx(\"button\",{disabled:able,onClick:ctaButton,children:state.questions[count].correct_answer}),next&&count<9?/*#__PURE__*/_jsx(\"button\",{onClick:ctaNext,style:{backgroundColor:'black',color:'white',display:{display:display}},children:\"NEXT\"}):null,count===9?/*#__PURE__*/_jsx(\"button\",{style:{backgroundColor:'black',color:'white'},onClick:ctaSubmit,children:\"Submit\"}):null]});}}export default QuestionCard;","map":{"version":3,"sources":["D:/React Apps/quiz-app-react/src/components/QuestionCard.jsx"],"names":["React","useState","useEffect","fetchData","useDispatch","useSelector","Link","Loader","QuestionCard","dispatch","state","console","log","questions","count","setCount","color","setColor","color2","setColor2","color3","setColor3","next","setNext","able","setAble","display","setDisply","score","setScore","scoreBoard","setScoreBoard","ctaButton","e","target","disabled","innerHTML","answers","prev","ctaNext","ctaSubmit","padding","textDecoration","backgroundColor","loading","alignSelf","question","incorrect_answers","map","item","index","correct_answer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { fetchData } from '../store/actions/fetchData'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction QuestionCard() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const state = useSelector((state) => { return state })\r\n    if (state[1]) {\r\n        console.log(state.questions)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData(dispatch, state)\r\n\r\n\r\n    }, [])\r\n\r\n    let [count, setCount] = useState(0)\r\n    let [color, setColor] = useState('rgb(216, 216, 131)')\r\n    let [color2, setColor2] = useState('rgb(216, 216, 131)')\r\n    let [color3, setColor3] = useState('rgb(216, 216, 131)')\r\n    let [next, setNext] = useState(false)\r\n    let [able, setAble] = useState(false)\r\n    let [display, setDisply] = useState('none')\r\n    let [score, setScore] = useState(0)\r\n    let [scoreBoard, setScoreBoard] = useState(false)\r\n\r\n    function ctaButton(e) {\r\n        setColor('rgb(216, 216, 131)')\r\n        setColor2('rgb(216, 216, 131)')\r\n        setColor3('rgb(216, 216, 131)')\r\n        setNext(true)\r\n        setDisply('block')\r\n        setAble(true)\r\n        e.target.disabled = false\r\n\r\n        if (e.target.innerHTML == state.answers[count]) {\r\n            setScore((prev) => prev + 1)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function ctaNext() {\r\n        setNext(false)\r\n        setCount((prev) => prev + 1)\r\n        setAble(false)\r\n    }\r\n\r\n\r\n    function ctaSubmit() {\r\n\r\n        setScoreBoard(true)\r\n    }\r\n\r\n    if (scoreBoard) {\r\n        return <div className=\"card\">\r\n            <h1>Your Score is {score} Out Of 10</h1>\r\n            <Link to=\"/\" style={{ padding: '10px 20px', textDecoration: 'none', backgroundColor: 'black', color: 'white' }}>Home</Link>\r\n        </div>\r\n    } else {\r\n        return (\r\n            <div className=\"card\">\r\n\r\n                {state.loading ? <Loader\r\n                    style={{ alignSelf: 'MutatingDots' }}\r\n                    type=\"Oval\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                /> : <h2>{state.questions[count].question} {count + 1} /10</h2>}\r\n                {state.loading ? null : state.questions[count].incorrect_answers.map((item, index) => { return <button disabled={able} key={index} onClick={ctaButton} style={{ backgroundColor: { color } }} >{item}</button> })}\r\n                {state.loading ? null : <button disabled={able} onClick={ctaButton}>{state.questions[count].correct_answer}</button>}\r\n                {next && count < 9 ? <button onClick={ctaNext} style={{ backgroundColor: 'black', color: 'white', display: { display } }}>NEXT</button> : null}\r\n                {count === 9 ? <button style={{ backgroundColor: 'black', color: 'white' }} onClick={ctaSubmit}>Submit</button> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default QuestionCard\r\n"]},"metadata":{},"sourceType":"module"}