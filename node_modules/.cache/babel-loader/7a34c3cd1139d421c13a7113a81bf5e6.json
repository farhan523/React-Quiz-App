{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Apps\\\\quiz-app-react\\\\src\\\\components\\\\QuestionCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchData } from '../store/actions/fetchData';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuestionCard() {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => {\n    return state;\n  });\n\n  if (state[1]) {\n    console.log(state.questions);\n  }\n\n  useEffect(() => {\n    fetchData(dispatch);\n  }, []);\n  let [count, setCount] = useState(1);\n  let [answer, setAnswer] = useState('');\n\n  function ctaButton(e) {\n    console.log(e.target.style.color = \"orange\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [state.loading ? 'loading...' : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: state.questions[count].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 45\n    }, this), state.loading ? null : state.questions[count].incorrect_answers.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 101\n      }, this);\n    }), state.loading ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        color: 'red'\n      },\n      onClick: ctaButton,\n      children: state.questions[count].correct_answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuestionCard, \"LnY5sExPr8pqxOEmp4/lqULgLQ0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = QuestionCard;\nexport default QuestionCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"sources":["D:/React Apps/quiz-app-react/src/components/QuestionCard.jsx"],"names":["React","useState","useEffect","fetchData","useDispatch","useSelector","QuestionCard","dispatch","state","console","log","questions","count","setCount","answer","setAnswer","ctaButton","e","target","style","color","loading","question","incorrect_answers","map","item","correct_answer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEpB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,KAAK,GAAGH,WAAW,CAAEG,KAAD,IAAW;AAAE,WAAOA,KAAP;AAAc,GAA5B,CAAzB;;AACA,MAAIA,KAAK,CAAC,CAAD,CAAT,EAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAlB;AACH;;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,SAAS,CAACI,QAAD,CAAT;AAEH,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAI,CAACK,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAhC;AACA,MAAI,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASe,SAAT,CAAmBC,CAAnB,EAAsB;AAClBR,IAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,KAAf,GAAuB,QAAnC;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eAEKZ,KAAK,CAACa,OAAN,GAAgB,YAAhB,gBAA+B;AAAA,gBAAKb,KAAK,CAACG,SAAN,CAAgBC,KAAhB,EAAuBU;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFpC,EAGKd,KAAK,CAACa,OAAN,GAAgB,IAAhB,GAAuBb,KAAK,CAACG,SAAN,CAAgBC,KAAhB,EAAuBW,iBAAvB,CAAyCC,GAAzC,CAA8CC,IAAD,IAAU;AAAE,0BAAO;AAAA,kBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AAAgC,KAAzF,CAH5B,EAIKjB,KAAK,CAACa,OAAN,GAAgB,IAAhB,gBAAuB;AAAQ,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT,OAAf;AAAiC,MAAA,OAAO,EAAEJ,SAA1C;AAAA,gBAAsDR,KAAK,CAACG,SAAN,CAAgBC,KAAhB,EAAuBc;AAA7E;AAAA;AAAA;AAAA;AAAA,YAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA5BQpB,Y;UAEYF,W,EACHC,W;;;KAHTC,Y;AA8BT,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { fetchData } from '../store/actions/fetchData'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nfunction QuestionCard() {\r\n\r\n    const dispatch = useDispatch()\r\n    const state = useSelector((state) => { return state })\r\n    if (state[1]) {\r\n        console.log(state.questions)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData(dispatch)\r\n\r\n    }, [])\r\n\r\n    let [count, setCount] = useState(1)\r\n    let [answer, setAnswer] = useState('')\r\n\r\n    function ctaButton(e) {\r\n        console.log(e.target.style.color = \"orange\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n\r\n            {state.loading ? 'loading...' : <h2>{state.questions[count].question}</h2>}\r\n            {state.loading ? null : state.questions[count].incorrect_answers.map((item) => { return <button>{item}</button> })}\r\n            {state.loading ? null : <button style={{ color: 'red' }} onClick={ctaButton}>{state.questions[count].correct_answer}</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionCard\r\n"]},"metadata":{},"sourceType":"module"}