{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Apps\\\\quiz-app-react\\\\src\\\\components\\\\QuestionCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchData } from '../store/actions/fetchData';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuestionCard() {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => {\n    return state;\n  });\n\n  if (state[1]) {\n    console.log(state.questions);\n  }\n\n  useEffect(() => {\n    fetchData(dispatch, state);\n  }, []);\n  let [count, setCount] = useState(0);\n  let [color, setColor] = useState('rgb(216, 216, 131)');\n  let [color2, setColor2] = useState('rgb(216, 216, 131)');\n  let [color3, setColor3] = useState('rgb(216, 216, 131)');\n  let [next, setNext] = useState(false);\n  let [able, setAble] = useState(false);\n  let [display, setDisply] = useState('none');\n  let [score, setScore] = useState(0);\n  let [scoreBoard, setScoreBoard] = useState(false);\n\n  function ctaButton(e) {\n    setColor('rgb(216, 216, 131)');\n    setColor2('rgb(216, 216, 131)');\n    setColor3('rgb(216, 216, 131)');\n    setNext(true);\n    setDisply('block');\n    setAble(true);\n    e.target.disabled = false;\n    console.log(e.target.innerHTML);\n\n    if (e.target.innerHTML == state.answers[count]) {\n      setScore(prev => prev + 1);\n    }\n  }\n\n  console.log(state.answers);\n\n  function ctaNext() {\n    setNext(false);\n    setCount(prev => prev + 1);\n    setAble(false);\n  }\n\n  function ctaSubmit() {\n    console.log(score);\n    setScoreBoard(true);\n  }\n\n  if (scoreBoard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Your Score is \", score, \" Out Of 10\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [state.loading ? 'loading...' : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [state.questions[count].question, \" \", count + 1, \" /10\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 49\n      }, this), state.loading ? null : state.questions[count].incorrect_answers.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: able,\n          onClick: ctaButton,\n          style: {\n            backgroundColor: {\n              color\n            }\n          },\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 112\n        }, this);\n      }), state.loading ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: able,\n        onClick: ctaButton,\n        children: state.questions[count].correct_answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }, this), next && count < 9 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: ctaNext,\n        style: {\n          backgroundColor: 'black',\n          color: 'white',\n          display: {\n            display\n          }\n        },\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 38\n      }, this) : null, count === 9 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: 'black',\n          color: 'white'\n        },\n        onClick: ctaSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 32\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(QuestionCard, \"WLX0FPTpdU49dKHEvGEtFYETFBo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = QuestionCard;\nexport default QuestionCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"sources":["D:/React Apps/quiz-app-react/src/components/QuestionCard.jsx"],"names":["React","useState","useEffect","fetchData","useDispatch","useSelector","QuestionCard","dispatch","state","console","log","questions","count","setCount","color","setColor","color2","setColor2","color3","setColor3","next","setNext","able","setAble","display","setDisply","score","setScore","scoreBoard","setScoreBoard","ctaButton","e","target","disabled","innerHTML","answers","prev","ctaNext","ctaSubmit","loading","question","incorrect_answers","map","item","index","backgroundColor","correct_answer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { fetchData } from '../store/actions/fetchData'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nfunction QuestionCard() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const state = useSelector((state) => { return state })\r\n    if (state[1]) {\r\n        console.log(state.questions)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData(dispatch, state)\r\n\r\n\r\n    }, [])\r\n\r\n    let [count, setCount] = useState(0)\r\n    let [color, setColor] = useState('rgb(216, 216, 131)')\r\n    let [color2, setColor2] = useState('rgb(216, 216, 131)')\r\n    let [color3, setColor3] = useState('rgb(216, 216, 131)')\r\n    let [next, setNext] = useState(false)\r\n    let [able, setAble] = useState(false)\r\n    let [display, setDisply] = useState('none')\r\n    let [score, setScore] = useState(0)\r\n    let [scoreBoard, setScoreBoard] = useState(false)\r\n\r\n    function ctaButton(e) {\r\n        setColor('rgb(216, 216, 131)')\r\n        setColor2('rgb(216, 216, 131)')\r\n        setColor3('rgb(216, 216, 131)')\r\n        setNext(true)\r\n        setDisply('block')\r\n        setAble(true)\r\n        e.target.disabled = false\r\n        console.log(e.target.innerHTML)\r\n        if (e.target.innerHTML == state.answers[count]) {\r\n            setScore((prev) => prev + 1)\r\n        }\r\n    }\r\n\r\n    console.log(state.answers)\r\n\r\n    function ctaNext() {\r\n        setNext(false)\r\n        setCount((prev) => prev + 1)\r\n        setAble(false)\r\n    }\r\n\r\n\r\n    function ctaSubmit() {\r\n        console.log(score)\r\n        setScoreBoard(true)\r\n    }\r\n\r\n    if (scoreBoard) {\r\n        return <div className=\"card\">\r\n            <h1>Your Score is {score} Out Of 10</h1>\r\n        </div>\r\n    } else {\r\n        return (\r\n            <div className=\"card\">\r\n\r\n                {state.loading ? 'loading...' : <h2>{state.questions[count].question} {count + 1} /10</h2>}\r\n                {state.loading ? null : state.questions[count].incorrect_answers.map((item, index) => { return <button disabled={able} key={index} onClick={ctaButton} style={{ backgroundColor: { color } }} >{item}</button> })}\r\n                {state.loading ? null : <button disabled={able} onClick={ctaButton}>{state.questions[count].correct_answer}</button>}\r\n                {next && count < 9 ? <button onClick={ctaNext} style={{ backgroundColor: 'black', color: 'white', display: { display } }}>NEXT</button> : null}\r\n                {count === 9 ? <button style={{ backgroundColor: 'black', color: 'white' }} onClick={ctaSubmit}>Submit</button> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default QuestionCard\r\n"]},"metadata":{},"sourceType":"module"}