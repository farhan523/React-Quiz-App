{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Apps\\\\quiz-app-react\\\\src\\\\components\\\\QuestionCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchData } from '../store/actions/fetchData';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuestionCard() {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => {\n    return state;\n  });\n\n  if (state[1]) {\n    console.log(state.questions);\n  }\n\n  useEffect(() => {\n    fetchData(dispatch);\n  }, []);\n  let [count, setCount] = useState(1);\n  let [answer, setAnswer] = useState('');\n  let [color, setColor] = useState('rgb(216, 216, 131)');\n  let [color2, setColor2] = useState('rgb(216, 216, 131)');\n  let [color3, setColor3] = useState('rgb(216, 216, 131)');\n  let [next, setNext] = useState(false);\n\n  function ctaButton(e) {\n    setColor('rgb(216, 216, 131)');\n    setColor2('rgb(216, 216, 131)');\n    setColor3('rgb(216, 216, 131)'); // setColor4('rgb(216, 216, 131)')\n\n    setNext(true);\n  }\n\n  let answers = [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [state.loading ? 'loading...' : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [state.questions[count].question, \" \", count, \" /10\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 45\n    }, this), state.loading ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ctaButton,\n      style: {\n        backgroundColor: {\n          color\n        }\n      },\n      children: state.questions[count].incorrect_answers[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }, this), state.loading ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ctaButton,\n      style: {\n        backgroundColor: {\n          color2\n        }\n      },\n      children: state.questions[count].incorrect_answers[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }, this), state.loading ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ctaButton,\n      style: {\n        backgroundColor: {\n          color3\n        }\n      },\n      children: state.questions[count].incorrect_answers[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }, this), state.loading ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        color: 'red'\n      },\n      onClick: ctaButton,\n      children: state.questions[count].correct_answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }, this), next ? /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: 'black',\n        color: 'white'\n      },\n      children: \"NEXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuestionCard, \"6c8XGJbSZN6ZZLDxPpxsIkLjK4M=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = QuestionCard;\nexport default QuestionCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"sources":["D:/React Apps/quiz-app-react/src/components/QuestionCard.jsx"],"names":["React","useState","useEffect","fetchData","useDispatch","useSelector","QuestionCard","dispatch","state","console","log","questions","count","setCount","answer","setAnswer","color","setColor","color2","setColor2","color3","setColor3","next","setNext","ctaButton","e","answers","loading","question","backgroundColor","incorrect_answers","correct_answer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { fetchData } from '../store/actions/fetchData'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nfunction QuestionCard() {\r\n\r\n    const dispatch = useDispatch()\r\n    const state = useSelector((state) => { return state })\r\n    if (state[1]) {\r\n        console.log(state.questions)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData(dispatch)\r\n\r\n    }, [])\r\n\r\n    let [count, setCount] = useState(1)\r\n    let [answer, setAnswer] = useState('')\r\n    let [color, setColor] = useState('rgb(216, 216, 131)')\r\n    let [color2, setColor2] = useState('rgb(216, 216, 131)')\r\n    let [color3, setColor3] = useState('rgb(216, 216, 131)')\r\n    let [next, setNext] = useState(false)\r\n\r\n\r\n    function ctaButton(e) {\r\n        setColor('rgb(216, 216, 131)')\r\n        setColor2('rgb(216, 216, 131)')\r\n        setColor3('rgb(216, 216, 131)')\r\n        // setColor4('rgb(216, 216, 131)')\r\n\r\n        setNext(true)\r\n    }\r\n\r\n    let answers = []\r\n\r\n    return (\r\n        <div className=\"card\">\r\n\r\n            {state.loading ? 'loading...' : <h2>{state.questions[count].question} {count} /10</h2>}\r\n            {state.loading ? null : <button onClick={ctaButton} style={{ backgroundColor: { color } }}>{state.questions[count].incorrect_answers[1]}</button>}\r\n            {state.loading ? null : <button onClick={ctaButton} style={{ backgroundColor: { color2 } }}>{state.questions[count].incorrect_answers[1]}</button>}\r\n            {state.loading ? null : <button onClick={ctaButton} style={{ backgroundColor: { color3 } }}>{state.questions[count].incorrect_answers[1]}</button>}\r\n            {state.loading ? null : <button style={{ color: 'red' }} onClick={ctaButton}>{state.questions[count].correct_answer}</button>}\r\n            {next ? <button style={{ backgroundColor: 'black', color: 'white' }}>NEXT</button> : null}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default QuestionCard\r\n"]},"metadata":{},"sourceType":"module"}