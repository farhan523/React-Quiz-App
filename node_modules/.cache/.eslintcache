[{"D:\\React Apps\\quiz-app-react\\src\\index.js":"1","D:\\React Apps\\quiz-app-react\\src\\App.js":"2","D:\\React Apps\\quiz-app-react\\src\\components\\Home.jsx":"3","D:\\React Apps\\quiz-app-react\\src\\components\\SelectCategory.jsx":"4","D:\\React Apps\\quiz-app-react\\src\\components\\QuestionCard.jsx":"5","D:\\React Apps\\quiz-app-react\\src\\store\\actions\\fetchData.js":"6","D:\\React Apps\\quiz-app-react\\src\\store\\actionType\\actionType.js":"7","D:\\React Apps\\quiz-app-react\\src\\logs\\store.js":"8","D:\\React Apps\\quiz-app-react\\src\\store\\reducer\\Reducer.js":"9","D:\\React Apps\\quiz-app-react\\src\\swDev.js":"10"},{"size":360,"mtime":1632291345632,"results":"11","hashOfConfig":"12"},{"size":147,"mtime":1631003262538,"results":"13","hashOfConfig":"12"},{"size":695,"mtime":1630915820639,"results":"14","hashOfConfig":"12"},{"size":1576,"mtime":1631325875634,"results":"15","hashOfConfig":"12"},{"size":3077,"mtime":1631205965777,"results":"16","hashOfConfig":"12"},{"size":645,"mtime":1631088327794,"results":"17","hashOfConfig":"12"},{"size":90,"mtime":1631084161028,"results":"18","hashOfConfig":"12"},{"size":242,"mtime":1631003525611,"results":"19","hashOfConfig":"12"},{"size":793,"mtime":1631086260736,"results":"20","hashOfConfig":"12"},{"size":196,"mtime":1632291232259,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qovnv8",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Apps\\quiz-app-react\\src\\index.js",[],"D:\\React Apps\\quiz-app-react\\src\\App.js",[],["46","47"],"D:\\React Apps\\quiz-app-react\\src\\components\\Home.jsx",["48"],"import React from 'react'\r\nimport QuestionCard from './QuestionCard';\r\nimport SelectCategory from './SelectCategory'\r\nimport './style.css'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <Router>\r\n            <div className=\"home\">\r\n\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <SelectCategory />\r\n                    </Route>\r\n                    <Route path=\"/quiz\">\r\n                        <QuestionCard />\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\React Apps\\quiz-app-react\\src\\components\\SelectCategory.jsx",["49","50","51","52","53","54","55"],"import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { SELECT_CATEGORY } from '../store/actionType/actionType';\r\nimport sport from '../image/sports.jpg'\r\nimport film from '../image/film.jpg'\r\nimport comp from '../image/comp.png'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nasync function ctaCat(e, dispatch) {\r\n    console.log(e.target.attributes.value.value);\r\n    await dispatch({\r\n        type: SELECT_CATEGORY,\r\n        categorie: e.target.attributes.value.value\r\n    })\r\n}\r\n\r\n\r\nfunction SelectCategory() {\r\n\r\n    let dispatch = useDispatch();\r\n\r\n\r\n    return (\r\n        <div className=\"select\">\r\n            <h1>Welcome to Quiz</h1>\r\n            <h3>Choose one from the categories below and see how many questions you can answer correctly out of 10 questions!</h3>\r\n            <div style={{ display: 'flex', width: '80%', justifyContent: 'space-around', flexWrap: 'wrap' }}>\r\n                <Link to=\"/quiz\"  ><img className=\"imb\" src={sport} value={'10'} onClick={(e) => ctaCat(e, dispatch)} style={{ width: '200px' }} /></Link>\r\n                <Link to=\"/quiz\" ><img className=\"imb\" value={'18'} onClick={(e) => ctaCat(e, dispatch)} src={comp} style={{ width: '170px', paddingTop: 20 }} /></Link>\r\n                <Link to=\"/quiz\" ><img className=\"imb\" value={'11'} onClick={(e) => ctaCat(e, dispatch)} src={film} style={{ width: '200px' }} /></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectCategory\r\n","D:\\React Apps\\quiz-app-react\\src\\components\\QuestionCard.jsx",["56","57","58","59"],"import React, { useState, useEffect } from 'react'\r\nimport { fetchData } from '../store/actions/fetchData'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction QuestionCard() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const state = useSelector((state) => { return state })\r\n    if (state[1]) {\r\n        console.log(state.questions)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData(dispatch, state)\r\n\r\n\r\n    }, [])\r\n\r\n    let [count, setCount] = useState(0)\r\n    let [color, setColor] = useState('rgb(216, 216, 131)')\r\n    let [color2, setColor2] = useState('rgb(216, 216, 131)')\r\n    let [color3, setColor3] = useState('rgb(216, 216, 131)')\r\n    let [next, setNext] = useState(false)\r\n    let [able, setAble] = useState(false)\r\n    let [display, setDisply] = useState('none')\r\n    let [score, setScore] = useState(0)\r\n    let [scoreBoard, setScoreBoard] = useState(false)\r\n\r\n    function ctaButton(e) {\r\n        setColor('rgb(216, 216, 131)')\r\n        setColor2('rgb(216, 216, 131)')\r\n        setColor3('rgb(216, 216, 131)')\r\n        setNext(true)\r\n        setDisply('block')\r\n        setAble(true)\r\n        e.target.disabled = false\r\n\r\n        if (e.target.innerHTML == state.answers[count]) {\r\n            setScore((prev) => prev + 1)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function ctaNext() {\r\n        setNext(false)\r\n        setCount((prev) => prev + 1)\r\n        setAble(false)\r\n    }\r\n\r\n\r\n    function ctaSubmit() {\r\n\r\n        setScoreBoard(true)\r\n    }\r\n\r\n    if (scoreBoard) {\r\n        return <div className=\"card\">\r\n            <h1>Your Score is {score} Out Of 10</h1>\r\n            <Link to=\"/\" style={{ padding: '10px 20px', textDecoration: 'none', backgroundColor: 'black', color: 'white' }}>Home</Link>\r\n        </div>\r\n    } else {\r\n        return (\r\n            <div className=\"card\">\r\n\r\n                {state.loading ? <Loader\r\n                    style={{ alignSelf: 'MutatingDots' }}\r\n                    type=\"Oval\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                /> : <h2>{state.questions[count].question} {count + 1} /10</h2>}\r\n                {state.loading ? null : state.questions[count].incorrect_answers.map((item, index) => { return <button disabled={able} key={index} onClick={ctaButton} style={{ backgroundColor: { color } }} >{item}</button> })}\r\n                {state.loading ? null : <button disabled={able} onClick={ctaButton}>{state.questions[count].correct_answer}</button>}\r\n                {next && count < 9 ? <button onClick={ctaNext} style={{ backgroundColor: 'black', color: 'white', display: { display } }}>NEXT</button> : null}\r\n                {count === 9 ? <button style={{ backgroundColor: 'black', color: 'white' }} onClick={ctaSubmit}>Submit</button> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default QuestionCard\r\n","D:\\React Apps\\quiz-app-react\\src\\store\\actions\\fetchData.js",[],"D:\\React Apps\\quiz-app-react\\src\\store\\actionType\\actionType.js",[],"D:\\React Apps\\quiz-app-react\\src\\logs\\store.js",[],"D:\\React Apps\\quiz-app-react\\src\\store\\reducer\\Reducer.js",[],"D:\\React Apps\\quiz-app-react\\src\\swDev.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":9,"column":5,"nodeType":"66","messageId":"67","endLine":9,"endColumn":9},{"ruleId":"64","severity":1,"message":"68","line":8,"column":22,"nodeType":"66","messageId":"67","endLine":8,"endColumn":28},{"ruleId":"64","severity":1,"message":"69","line":9,"column":5,"nodeType":"66","messageId":"67","endLine":9,"endColumn":11},{"ruleId":"64","severity":1,"message":"70","line":10,"column":5,"nodeType":"66","messageId":"67","endLine":10,"endColumn":10},{"ruleId":"64","severity":1,"message":"71","line":13,"column":10,"nodeType":"66","messageId":"67","endLine":13,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":34,"column":36,"nodeType":"74","endLine":34,"endColumn":148},{"ruleId":"72","severity":1,"message":"73","line":35,"column":35,"nodeType":"74","endLine":35,"endColumn":162},{"ruleId":"72","severity":1,"message":"73","line":36,"column":35,"nodeType":"74","endLine":36,"endColumn":146},{"ruleId":"75","severity":1,"message":"76","line":23,"column":8,"nodeType":"77","endLine":23,"endColumn":10,"suggestions":"78"},{"ruleId":"64","severity":1,"message":"79","line":27,"column":10,"nodeType":"66","messageId":"67","endLine":27,"endColumn":16},{"ruleId":"64","severity":1,"message":"80","line":28,"column":10,"nodeType":"66","messageId":"67","endLine":28,"endColumn":16},{"ruleId":"81","severity":1,"message":"82","line":44,"column":32,"nodeType":"83","messageId":"84","endLine":44,"endColumn":34},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["87"],"'color2' is assigned a value but never used.","'color3' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [dispatch, state]",{"range":"90","text":"91"},[593,595],"[dispatch, state]"]